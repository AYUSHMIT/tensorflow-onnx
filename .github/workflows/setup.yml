name: setup-common

on:
  push:
    branches:
      - main
  pull_request:
  workflow_call:
    inputs:
      tf_version:
        description: 'TensorFlow version'
        required: true
        type: string
      py_version:
        description: 'Python version'
        required: true
        type: string

jobs:
  setup:
    strategy:
      matrix:
        tf_version: ['2.10.0', '2.11.0', '2.13.0']
        python_version: ['3.8', '3.9', '3.10']
    permissions:
      actions: write
      checks: write

    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # python-version: ${{ inputs.py_version }}
          python-version: ${{ matrix.py_version }}

      - name: Checkout code (${{ matrix.py_version }}-${{ matrix.tf_version }})
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          # pip install pytest pytest-cov pytest-runner coverage graphviz requests pyyaml pillow pandas parameterized sympy coloredlogs flatbuffers timeout-decorator
          pip install numpy

          pip install onnxruntime-extensions
          # pip install "tensorflow-text<=${{ inputs.tf_version }}"
          pip install "tensorflow-text<=${{ matrix.tf_version }}"

          pip uninstall -y tensorflow
          # pip install tensorflow==${{ inputs.tf_version }}
          pip install tensorflow==${{ matrix.tf_version }}
          pip uninstall -y protobuf
          pip install "protobuf~=3.20"

          ls /home/runner/work/tensorflow-onnx/tensorflow-onnx/
          ls /home/runner/work/tensorflow-onnx/
          cd /home/runner/work/tensorflow-onnx/tensorflow-onnx/
          python setup.py install

          pip freeze --all

      # - name: Fix Paths (Windows only)
      #   if: runner.os == 'Windows'
      #   run: |
      #     $site_dir = python -c "import site; print(site.getsitepackages()[1])"
      #     echo "##vso[task.prependpath]$site_dir\numpy\.libs"
      #     $base_dir = python -c "import site; print(site.getsitepackages()[0])"
      #     echo "##vso[task.prependpath]$base_dir/Library/bin"

      - name: Display Environment Variables
        run: env
