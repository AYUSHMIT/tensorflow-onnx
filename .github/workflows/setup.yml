name: setup-common

on:
  push:
    branches:
      - main
  pull_request:
  workflow_call:
    inputs:
      tf_version:
        description: 'TensorFlow version'
        required: true
        type: string
      py_version:
        description: 'Python version'
        required: true
        type: string

jobs:
  setup:
    strategy:
      matrix:
        tf_version: ['2.10', '2.13']
        python_version: ['3.8', '3.9']
        opset_version: ['17']
    env:
      tensorflow_version: ${{ github.event.inputs.tf_version }}
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python (${{ matrix.python_version }})
        uses: actions/setup-python@v5
        with:
          # python-version: ${{ inputs.py_version }}
          python-version: ${{ matrix.python_version }}

      - name: Checkout code ($tensorflow_version)
        uses: actions/checkout@v4

      - name: Check folder
        run: |
          ls ./.github/workflows/

      - name: Install dependencies (tf ${{ matrix.tf_version }})
        uses: ./.github/actions/prepare_env/
        with:
          tf_version: ${{ matrix.tf_version }}
        # run: |
        #   pip install pytest pytest-cov pytest-runner coverage graphviz requests pyyaml pillow pandas parameterized sympy coloredlogs flatbuffers timeout-decorator
        #   pip install onnx
        #   pip install onnxruntime==1.16.3
        #   pip install numpy

        #   pip install onnxruntime-extensions
        #   pip install "tensorflow-text<=${{ matrix.tf_version }}"

        #   pip uninstall -y tensorflow
        #   pip install tensorflow==${{ matrix.tf_version }}
        #   pip uninstall -y protobuf
        #   pip install "protobuf~=3.20"

        #   python setup.py install

        #   pip freeze --all

      - name: Fix Paths (Windows only)
        if: runner.os == 'Windows'
        run: |
          $site_dir = python -c "import site; print(site.getsitepackages()[1])"
          echo "##vso[task.prependpath]$site_dir\numpy\.libs"
          $base_dir = python -c "import site; print(site.getsitepackages()[0])"
          echo "##vso[task.prependpath]$base_dir/Library/bin"

      - name: Run pretrained_model_test
        run: |
          set -x
          status=0
          # TODO: fix unity model path
          # python tests/run_pretrained_models.py --backend $CI_ONNX_BACKEND --opset $CI_ONNX_OPSET --config tests/unity.yaml || status=$?
          python tests/run_pretrained_models.py --backend onnxruntime --opset ${{ matrix.opset_version }} --skip_tf_tests False --skip_tflite_tests False --skip_tfjs_tests True --config tests/run_pretrained_models.yaml || status=$?
          exit $status

